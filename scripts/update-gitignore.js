import fs from 'fs';

/**
 * Update .gitignore to include the provided files between the specified fences.
 * 
 * @param {string[]} filesArray - An array of file paths to be added to .gitignore.
 * @param {string} gitignorePath - Path to the .gitignore file.
 */
export function updateReadonlyFilesForGit(filesArray, gitignorePath = '.gitignore') {
  const START_FENCE = "# ðŸ”’ AUTOGENERATED BY CUSTOM SHOELACE CLI - START";
  const END_FENCE = "# ðŸ”’ AUTOGENERATED BY CUSTOM SHOELACE CLI - END";

  try {
    let gitignoreContent = '';
    if (fs.existsSync(gitignorePath)) {
      gitignoreContent = fs.readFileSync(gitignorePath, 'utf8');
    }

    const startFenceIndex = gitignoreContent.indexOf(START_FENCE);
    const endFenceIndex = gitignoreContent.indexOf(END_FENCE);

    const beforeFence = startFenceIndex !== -1 ? gitignoreContent.substring(0, startFenceIndex) : gitignoreContent;
    const afterFence = endFenceIndex !== -1 ? gitignoreContent.substring(endFenceIndex + END_FENCE.length) : '';

    const autogeneratedContent = `${START_FENCE}\n${filesArray.join('\n')}\n${END_FENCE}`;

    fs.writeFileSync(gitignorePath, `${beforeFence}${autogeneratedContent}${afterFence}`, 'utf8');

    console.log(`Updated ${gitignorePath} successfully!`);
  } catch (error) {
    console.error('An error occurred while updating .gitignore:', error);
  }
}

export default updateReadonlyFilesForGit;
